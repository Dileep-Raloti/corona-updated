{"version":3,"sources":["Covid.jsx","App.js","reportWebVitals.js","index.js"],"names":["Covid","useState","result","setState","getCocidData","a","fetch","res","json","data","statewise","useEffect","className","map","d","index","state","confirmed","recovered","deaths","active","lastupdatedtime","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOA4DeA,EAvDD,WAEV,MAA2BC,mBAAS,IAApC,mBAAOC,EAAP,KAAeC,EAAf,KAEMC,EAAY,uCAAG,8BAAAC,EAAA,sEACCC,MAAM,0CADP,cACXC,EADW,gBAEEA,EAAIC,OAFN,OAEXC,EAFW,OAIjBN,EAASM,EAAKC,WAJG,2CAAH,qDAalB,OALAC,qBAAU,WACNP,MACD,IAIC,qCACI,oBAAIQ,UAAU,aAAd,kCACA,wBAAOA,UAAU,yCAAjB,UACI,gCACI,+BACI,qCACA,wCACA,4CACA,2CACA,yCACA,+CACA,oDAGR,gCACIV,EAAOW,KAAI,SAACC,EAAEC,GACX,OACI,mCACC,+BACI,6BAAKA,EAAQ,IACb,6BAAKD,EAAEE,QACP,6BAAKF,EAAEG,YACP,6BAAKH,EAAEI,YACP,6BAAKJ,EAAEK,SACP,6BAAKL,EAAEM,SACP,6BAAKN,EAAEO,oBAPFN,iBC/BtBO,EAPH,WACV,OACI,cAAC,EAAD,KCOSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.854625dc.chunk.js","sourcesContent":["// import { element } from \"prop-types\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport './App.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst Covid = () => {\r\n\r\n    const [result, setState] = useState([])\r\n\r\n    const getCocidData = async () => {\r\n        const res = await fetch('https://api.covid19india.org/data.json');\r\n        const data = await res.json();\r\n        // console.log(data.statewise);\r\n        setState(data.statewise);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getCocidData();\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n            <h4 className=\"heading-h2\">Covid Data statewise</h4>\r\n            <table className=\"table table-striped table-hover  w-100\">\r\n                <thead>\r\n                    <tr>\r\n                        <th> no</th>\r\n                        <th> State</th>\r\n                        <th> Confirmed</th>\r\n                        <th> Recoverd</th>\r\n                        <th> Deaths</th>\r\n                        <th> Active Cases</th>\r\n                        <th> Last Updated</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                   {result.map((d,index) =>{\r\n                       return (\r\n                           <>\r\n                            <tr key={index}>\r\n                                <td>{index + 1}</td>\r\n                                <td>{d.state}</td>\r\n                                <td>{d.confirmed}</td>\r\n                                <td>{d.recovered}</td>\r\n                                <td>{d.deaths}</td>\r\n                                <td>{d.active}</td>\r\n                                <td>{d.lastupdatedtime}</td>\r\n                            </tr>\r\n                           </>\r\n                       )\r\n                   })}\r\n                </tbody>\r\n            </table>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Covid","import './App.css';\n\nimport Covid from \"./Covid\"\nconst App = () => {\n  return (\n      <Covid />\n   )\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}